# Credit_COVID19_Canada
The primary data source is the TransUnion credit bureau &reg;.
Data are provided to the Bank of Canada on a monthly basis.
Under the contractual agreement with TransUnion,
the data are not publicly available.
The Bank of Canada does, however, have a process for external researchers
to work with these data.
The Bank of Canada's Financial System Research Center
is a hub for research on household finance
(https://www.bankofcanada.ca/research/financial-system-research-centre/).
Interested parties, who are Canadian citizens or permanent residents,
can contact Jason Allen (Jallen@bankofcanada.ca)
or the Managing Director of research Jim MacGee (JMacGee@bankofcanada.ca).
Interested parties are asked to submit a project proposal;
the proposal is evaluated by senior staff at the Bank of Canada for feasibility;
external researchers do not typically have direct access to the data
and must work with a Bank of Canada staff member.
An exception is if an external collaborator applies for
and is granted temporary employee status -- in this case,
the external researcher can access the data
so long as they have a Bank of Canada affiliation.
All research is vetted by Bank of Canada senior staff prior to publication.
source("C:/Users/atyho/Dropbox/tu_LiM/Empirical-Application/estimation/2018/BC/graph.R")
rm(list = ls())
source("C:/Users/atyho/Desktop/IFC_DS_CB/program/R_graph.R")
dist_data <- read.csv(file = 'dist_data.csv', stringsAsFactors = TRUE)
install.packages(c("askpass", "backports", "BH", "bibtex", "bit", "blogdown", "bookdown", "brew", "brio", "broom", "bslib", "cachem", "Cairo", "callr", "car", "carData", "CDM", "chron", "cli", "clipr", "colorspace", "commonmark", "conquer", "copula", "corrplot", "cpp11", "crayon", "credentials", "cubature", "curl", "data.table", "desc", "DescTools", "devtools", "diffobj", "digest", "DistributionUtils", "doBy", "doParallel", "dplyr", "e1071", "evaluate", "Exact", "expm", "fansi", "farver", "fastmap", "FNN", "forcats", "foreach", "fs", "generics", "gert", "ggplot2", "ggpubr", "ggrepel", "ggsci", "ggsignif", "gh", "gitcreds", "gld", "glue", "gsl", "gtable", "haven", "highr", "hms", "htmltools", "httpuv", "httr", "isoband", "iterators", "jsonlite", "kdevine", "kernlab", "knitr", "ks", "labeling", "later", "lifecycle", "lme4", "lmom", "locfit", "LowRankQP", "lubridate", "magrittr", "maptools", "markdown", "MatrixModels", "matrixStats", "mclust", "memoise", "microbenchmark", "mime", "minqa", "mnormt", "mvtnorm", "nloptr", "np", "openssl", "openxlsx", "optimx", "pbapply", "pbkrtest", "pcaPP", "pillar", "pkgbuild", "pkgload", "plyr", "polycor", "polynom", "pracma", "processx", "promises", "proxy", "ps", "pspline", "psych", "purrr", "qrng", "quantreg", "randtoolbox", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "RefManageR", "rematch", "remotes", "rio", "rlang", "rmarkdown", "rngWELL", "rootSolve", "roxygen2", "rprojroot", "rstatix", "rstudioapi", "rugarch", "rversions", "sass", "scales", "servr", "sessioninfo", "shiny", "sourcetools", "sp", "statar", "stringi", "stringr", "Synth", "sys", "TAM", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "truncnorm", "tzdb", "usethis", "utf8", "vctrs", "VineCopula", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "xts", "yaml", "zip", "zoo"))
install.packages("VineCopula")
install.packages("QRMlib")
install.packages("copulaedas")
install.packages("copula")
install.packages("Rtools")
install.packages(c("admisc", "arrow", "askpass", "cachem", "Cairo", "chron", "cubature", "curl", "DescTools", "digest", "DistributionUtils", "dplyr", "fs", "gert", "haven", "htmltools", "httpuv", "jsonlite", "ks", "later", "lme4", "lmom", "locfit", "LowRankQP", "maptools", "Matrix", "MatrixModels", "matrixStats", "microbenchmark", "minqa", "mvtnorm", "openssl", "processx", "profvis", "promises", "purrr", "quantreg", "Rcpp", "RcppArmadillo", "readxl", "rlang", "sass", "sp", "sys", "testthat", "tzdb", "vctrs", "VineCopula", "vroom", "xfun", "xml2"))
install.packages(c("admisc", "arrow", "askpass", "cachem", "Cairo", "chron", "cubature", "curl", "DescTools", "digest", "DistributionUtils", "dplyr", "fs", "gert", "haven", "htmltools", "httpuv", "jsonlite", "ks", "later", "lme4", "lmom", "locfit", "LowRankQP", "maptools", "Matrix", "MatrixModels", "matrixStats", "microbenchmark", "minqa", "mvtnorm", "openssl", "processx", "profvis", "promises", "purrr", "quantreg", "Rcpp", "RcppArmadillo", "readxl", "rlang", "sass", "sp", "sys", "testthat", "tzdb", "vctrs", "VineCopula", "vroom", "xfun", "xml2"))
install.packages("VineCopula")
list()
getwd()
previously_installed <- read.csv('previously_installed.csv')
package_list <- as.character(previously_installed$Package)
package_list
install.lib <- package_list[!package_list %in% installed.packages()]
for(lib in install.lib) install.packages(lib, dependencies = TRUE)
for(lib in install.lib) install.packages(lib, dependencies = TRUE)
getwd()
previously_installed <- read.csv('previously_installed.csv')
package_list <- as.character(previously_installed$Package)
package_list
install.lib <- package_list[!package_list %in% installed.packages()]
for(lib in install.lib) install.packages(lib, dependencies = TRUE)
install.packages("VGAM")
getwd()
setwd
setwd("C:\Users\atyho\OneDrive\Desktop\eletricity_data\ON")
rm(ls())
rm(list())
library(readr)
library(readr)
#import and merge all three CSV files into one data frame
df <- list.files(path='../demand')
getwd()
library(dplyr)
getwd()
setwd()
setwd('C:\Users\atyho\OneDrive\Desktop\eletricity_data\ON')
setwd("'"C:/Users/atyho/OneDrive/Desktop/eletricity_data/ON")
setwd("C:/Users/atyho/OneDrive/Desktop/eletricity_data/ON")
getwd
getwd()
#import and merge all three CSV files into one data frame
df <- list.files(path='../demand')
list()
