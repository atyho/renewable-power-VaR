rm(list = ls())
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(lubridate)
library(here)
setwd(paste0(here(), "/fuel_mix"))
# Import and merge all CSV files into one data frame
fuelmix_NY <- list.files() %>%
lapply(read_csv, show_col_types = FALSE) %>%
bind_rows
fuelmix_NY_backup <- fuelmix_NY
fuelmix_NY <- fuelmix_NY %>%
rename(time = "Time Stamp",
fuel = "Fuel Category",
gen_mw = "Gen MW",
timezone = "Time Zone") %>%
mutate(
time = as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S", tz = "America/New_York"),
time = time - seconds(1),
time_utc = with_tz(time, tzone = "UTC")
)
View(fuelmix_NY_backup)
View(fuelmix_NY)
fuelmix_NY <- fuelmix_NY_backup
View(fuelmix_NY)
fuelmix_NY <- fuelmix_NY %>%
rename(time = "Time Stamp",
fuel = "Fuel Category",
gen_mw = "Gen MW",
timezone = "Time Zone") %>%
mutate(
time = as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S", tz = "America/New_York"),
time_utc = with_tz(time, tzone = "UTC")
)
fuelmix_NY <- fuelmix_NY %>% filter(fuel="Hydro") %>% filter(year(time)==2018)
fuelmix_NY <- fuelmix_NY %>% filter(fuel=="Hydro") %>% filter(year(time)==2018)
setwd(paste0(here(), "/fuel_mix"))
# Import and merge all CSV files into one data frame
fuelmix_NY <- list.files() %>%
lapply(read_csv, show_col_types = FALSE) %>%
bind_rows
fuelmix_NY_backup <- fuelmix_NY
fuelmix_NY <- fuelmix_NY_backup
fuelmix_NY <- fuelmix_NY %>% filter(fuel=="Hydro") %>% filter(year(time)==2018)
fuelmix_NY <- fuelmix_NY %>%
rename(time = "Time Stamp",
fuel = "Fuel Category",
gen_mw = "Gen MW",
timezone = "Time Zone") %>%
filter(fuel=="Hydro") %>% filter(year(time)==2018) %>%
mutate(
time = as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S", tz = "America/New_York"),
time_utc = with_tz(time, tzone = "UTC")
)
fuelmix_NY <- fuelmix_NY %>%
rename(time = "Time Stamp",
fuel = "Fuel Category",
gen_mw = "Gen MW",
timezone = "Time Zone") %>%
mutate(
time = as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S", tz = "America/New_York"),
time_utc = with_tz(time, tzone = "UTC")
) %>%
filter(fuel=="Hydro") %>% filter(year(time)==2018)
View(fuelmix_NY)
fuelmix_NY <- fuelmix_NY_backup
fuelmix_NY <- fuelmix_NY %>%
rename(time = "Time Stamp",
fuel = "Fuel Category",
gen_mw = "Gen MW",
timezone = "Time Zone") %>%
mutate(
time_local = as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"),
# Apply the correct time zone using force_tz specifically for EST and EDT
time_local_adjusted = case_when(
timezone == "EDT" ~ force_tz(time_local, tzone = "Etc/GMT+4"),  # EDT is UTC-4
timezone == "EST" ~ force_tz(time_local, tzone = "Etc/GMT+5")   # EST is UTC-5
),
# Convert to UTC using the correctly adjusted time zones
time_utc = with_tz(time_local_adjusted, tzone = "UTC")
) %>%
filter(fuel=="Hydro") %>% filter(year(time)==2018)
fuelmix_NY <- fuelmix_NY %>%
rename(time = "Time Stamp",
fuel = "Fuel Category",
gen_mw = "Gen MW",
timezone = "Time Zone") %>%
mutate(
time_local = as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"),
# Apply the correct time zone using force_tz specifically for EST and EDT
time_local_adjusted = case_when(
timezone == "EDT" ~ force_tz(time_local, tzone = "Etc/GMT+4"),
timezone == "EST" ~ force_tz(time_local, tzone = "Etc/GMT+5")),
# Convert to UTC using the correctly adjusted time zones
time_utc = with_tz(time_local_adjusted, tzone = "UTC")
) %>%
filter(fuel=="Hydro") %>% filter(year(time_local_adjusted)==2018)
View(fuelmix_NY)
fuelmix_NY <- fuelmix_NY_backup
fuelmix_NY <- fuelmix_NY %>%
rename(time = "Time Stamp",
fuel = "Fuel Category",
gen_mw = "Gen MW",
timezone = "Time Zone") %>%
# Parse the 'time' column and apply the correct time zone in a single step
mutate(
time_local_adjusted = case_when(
timezone == "EDT" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+4"),  # EDT is UTC-4
timezone == "EST" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+5")   # EST is UTC-5
),
# Convert to UTC using the correctly adjusted time zones
time_utc = with_tz(time_local_adjusted, tzone = "UTC")
) %>%
filter(fuel=="Hydro") %>% filter(year(time_local_adjusted)==2018)
View(fuelmix_NY)
fuelmix_NY <- fuelmix_NY_backup
fuelmix_NY <- fuelmix_NY %>%
rename(time = "Time Stamp",
fuel = "Fuel Category",
gen_mw = "Gen MW",
timezone = "Time Zone") %>%
mutate(
time_EDT = case_when(
timezone == "EDT" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+4"),
timezone == "EST" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+5")),
time_utc = with_tz(time_EDT, tzone = "UTC")
) %>%
mutate(time_offset = time_utc - seconds(1),
hour = floor_date(time_offset, unit = "hour") + hours(1)) %>%
filter(fuel=="Hydro") %>% filter(year(time_local_adjusted)==2018)
fuelmix_NY <- fuelmix_NY %>%
rename(time = "Time Stamp",
fuel = "Fuel Category",
gen_mw = "Gen MW",
timezone = "Time Zone") %>%
mutate(
time_EDT = case_when(
timezone == "EDT" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+4"),
timezone == "EST" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+5")),
time_utc = with_tz(time_EDT, tzone = "UTC")
) %>%
mutate(time_offset = time_utc - seconds(1),
hour = floor_date(time_offset, unit = "hour") + hours(1)) %>%
filter(fuel=="Hydro") %>% filter(year(time_EDT)==2018)
View(fuelmix_NY)
fuelmix_NY2 <- fuelmix_NY %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, fuel) %>%
# Summarize the data to get total generation for each combination
summarize(total_gen_mw = sum(gen_mw, na.rm = TRUE)) %>%
ungroup()  # Ungroup the data after summarization
View(fuelmix_NY2)
fuelmix_NY2 <- fuelmix_NY %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, fuel) %>%
# Summarize the data to get total generation for each combination
summarize(total_gen_mw = sum(gen_mw, na.rm = TRUE), .groups = "drop")
View(fuelmix_NY2)
setwd(paste0(here(), "/fuel_mix"))
# Import and merge all CSV files into one data frame
fuelmix_NY <- list.files() %>%
lapply(read_csv, show_col_types = FALSE) %>%
bind_rows
# Rename columns and convert time to UTC
fuelmix_NY <- fuelmix_NY %>%
rename(time = "Time Stamp", timezone = "Time Zone",
fuel = "Fuel Category", gen_mw = "Gen MW") %>%
mutate(
time_EDT = case_when(
timezone == "EDT" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+4"),
timezone == "EST" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+5")),
time_utc = with_tz(time_EDT, tzone = "UTC"))
# Aggregate electricity generation to hourly data by fuel type
fuelmix_NY <- fuelmix_NY %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc - seconds(1),
hour = floor_date(time_offset, unit = "hour") + hours(1)) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, fuel) %>%
# Summarize the data to get total generation for each combination
summarize(gen_mw = sum(gen_mw, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour") %>%
# Reshape data to wide format by fuel type
pivot_wider(names_from = fuel, values_from = gen_mw)
View(fuelmix_NY)
fuelmix_NY <- fuelmix_NY %>% mutate(time = with_tz(time_utc, tzone = "America/New_York"))
View(fuelmix_NY)
setwd(paste0(here(), "/load"))
# Import and merge all CSV files into one data frame
load_NY <- list.files() %>%
lapply(read_csv, show_col_types = FALSE) %>%
bind_rows
# Convert wide dataframe to long format
load_NY2 <- load_NY %>%
rename(time = "Time Stamp", timezone = "Time Zone") %>%
mutate(
time_EDT = case_when(
timezone == "EDT" ~ force_tz(as.POSIXct(Time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+4"),
timezone == "EST" ~ force_tz(as.POSIXct(Time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+5")),
# Convert to UTC using the correctly adjusted time zones
time_utc = with_tz(time_EDT, tzone = "UTC"))
# Convert wide dataframe to long format
load_NY2 <- load_NY %>%
rename(time = "Time Stamp", timezone = "Time Zone") %>%
mutate(
time_EDT = case_when(
timezone == "EDT" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+4"),
timezone == "EST" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+5")),
# Convert to UTC using the correctly adjusted time zones
time_utc = with_tz(time_EDT, tzone = "UTC"))
View(load_NY2)
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc - seconds(1),
hour = floor_date(time_offset, unit = "hour") + hours(1)) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load = sum(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour")
View(load_NY3)
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc - seconds(1),
hour = floor_date(time_offset, unit = "hour") + hours(1)) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour) %>%
# Summarize the data to get total generation for each combination
summarize(load_NY = sum(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour")
View(load_NY3)
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc - seconds(1),
hour = floor_date(time_offset, unit = "hour") + hours(1)) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load_NY = sum(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour")
View(load_NY3)
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc - seconds(1),
hour = floor_date(time_offset, unit = "hour") + hours(1)) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load_NY = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour")
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(hour = floor_date(time_utc, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load_NY = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour")
View(load_NY3)
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc,
hour = ceiling_date(time_offset, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load_NY = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour")
View(load_NY3)
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc,
hour = ceiling_date(time_offset, unit = "hour"))
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc + seconds(1),
hour = ceiling_date(time_offset, unit = "hour"))
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc + seconds(1),
hour = ceiling_date(time_offset, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load_NY = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour")
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc,
hour = ceiling_date(time_offset, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load_NY = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour")
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc - seconds(1),
hour = ceiling_date(time_offset, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load_NY = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour")
View(load_NY3)
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc - seconds(1),
hour = ceiling_date(time_offset, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load_NY = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour") %>%
# Reshape data to wide format by fuel type
pivot_wider(names_from = Name, values_from = load)
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc - seconds(1),
hour = ceiling_date(time_offset, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour") %>%
# Reshape data to wide format by fuel type
pivot_wider(names_from = Name, values_from = load)
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc - seconds(1),
hour = ceiling_date(time_offset, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour") %>%
# Reshape data to wide format by fuel type
pivot_wider(names_from = Name, values_from = load) %>%
# Sum up all columns (after pivot) row-wise
rowwise() %>%
mutate(total_load = sum(c_across(where(is.numeric)), na.rm = TRUE)) %>%
ungroup()
View(load_NY3)
# Aggregate electricity load to hourly data by zone
load_NY3 <- load_NY2 %>%
# Offset time and represent the time as hour ending
mutate(time_offset = time_utc,
hour = ceiling_date(time_offset, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour") %>%
# Reshape data to wide format by fuel type
pivot_wider(names_from = Name, values_from = load) %>%
# Sum up all columns (after pivot) row-wise
rowwise() %>%
mutate(total_load = sum(c_across(where(is.numeric)), na.rm = TRUE)) %>%
ungroup()
View(load_NY3)
View(fuelmix_NY)
# Aggregate electricity load to hourly data by zone
load_NY <- load_NY %>%
# Offset time and represent the time as hour ending
mutate(hour = ceiling_date(time_utc, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour") %>%
# Reshape data to wide format by fuel type
pivot_wider(names_from = Name, values_from = load) %>%
mutate(time = with_tz(time_utc, tzone = "America/New_York")) %>%
# Sum up all columns (after pivot) row-wise
rowwise() %>%
mutate(total_load = sum(c_across(where(is.numeric)), na.rm = TRUE))
load_NY <- load_NY %>%
rename(time = "Time Stamp", timezone = "Time Zone") %>%
mutate(
time_EDT = case_when(
timezone == "EDT" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+4"),
timezone == "EST" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+5")),
# Convert to UTC using the correctly adjusted time zones
time_utc = with_tz(time_EDT, tzone = "UTC"))
# Aggregate electricity load to hourly data by zone
load_NY <- load_NY %>%
# Offset time and represent the time as hour ending
mutate(hour = ceiling_date(time_utc, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour") %>%
# Reshape data to wide format by fuel type
pivot_wider(names_from = Name, values_from = load) %>%
mutate(time = with_tz(time_utc, tzone = "America/New_York")) %>%
# Sum up all columns (after pivot) row-wise
rowwise() %>%
mutate(total_load = sum(c_across(where(is.numeric)), na.rm = TRUE))
View(load_NY3)
load_NY <- list.files() %>%
lapply(read_csv, show_col_types = FALSE) %>%
bind_rows
# Rename columns and convert time to UTC
load_NY <- load_NY %>%
rename(time = "Time Stamp", timezone = "Time Zone") %>%
mutate(
time_EDT = case_when(
timezone == "EDT" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+4"),
timezone == "EST" ~ force_tz(as.POSIXct(time, format = "%m/%d/%Y %H:%M:%S"), tzone = "Etc/GMT+5")),
# Convert to UTC using the correctly adjusted time zones
time_utc = with_tz(time_EDT, tzone = "UTC"))
# Aggregate electricity load to hourly data by zone
load_NY2 <- load_NY %>%
# Offset time and represent the time as hour ending
mutate(hour = floor_date(time_utc, unit = "hour") + hours(1)) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour") %>%
# Reshape data to wide format by fuel type
pivot_wider(names_from = Name, values_from = load) %>%
mutate(time = with_tz(time_utc, tzone = "America/New_York")) %>%
# Sum up all columns (after pivot) row-wise
rowwise() %>%
mutate(total_load = sum(c_across(where(is.numeric)), na.rm = TRUE)) %>%
ungroup()
View(load_NY2)
# Aggregate electricity load to hourly data by zone
load_NY <- load_NY %>%
# Offset time and represent the time as hour ending
mutate(hour = ceiling_date(time_utc, unit = "hour")) %>%
# Group by the hour ending, fuel type, and timezone
group_by(hour, Name) %>%
# Summarize the data to get total generation for each combination
summarize(load = mean(Load, na.rm = TRUE), .groups = "drop") %>%
rename(time_utc = "hour") %>%
# Reshape data to wide format by fuel type
pivot_wider(names_from = Name, values_from = load) %>%
mutate(time = with_tz(time_utc, tzone = "America/New_York")) %>%
# Sum up all columns (after pivot) row-wise
rowwise() %>%
mutate(load_NY = sum(c_across(where(is.numeric)), na.rm = TRUE)) %>%
ungroup()
NYISO <- inner_join(load_NY %>% select(time_utc, load_NY),
fuelmix_NY, by = "time_utc") %>%
mutate(time = with_tz(time_utc, tzone = "America/New_York"))
View(NYISO)
source("C:/Users/atyho/Dropbox/eletricity_data/NY/NY_data_process.R")
View(NYISO)
